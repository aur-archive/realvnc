--- vncinitconfig	2015-01-28 16:47:56.000000000 +0100
+++ vncinitconfig.arch	2015-02-10 17:10:50.000000000 +0100
@@ -241,16 +241,16 @@
 account required pam_unix.so"
 username=\$USER
 ### dirs and utils:
-etc=/etc
+etc=$1/etc
 etcvnc=$etc/vnc
-bin=/usr/local/bin
-libvnc=/usr/local/lib/vnc
-sharevnc=/usr/share/vnc
+bin=$1/usr/bin
+libvnc=$1/usr/lib/vnc
+sharevnc=$1/usr/share/vnc
 awk=awk
 which_str=which
 ### CUPS:
-cups_backend_dir=/usr/lib/cups/backend
-cups64_backend_dir=/usr/lib64/cups/backend
+cups_backend_dir=$1/usr/lib/cups/backend
+cups64_backend_dir=$1/usr/lib64/cups/backend
 sun_cups_dir=
 link_cups_lib64=0
 ### moduledirname is used for network installs
@@ -271,110 +271,9 @@
 }
 
 SYSNAME=`uname -s`
-case "$SYSNAME" in
-    Linux)
-        link_cups_lib64=1
-        libvnc=/usr/lib/vnc
-        bin=/usr/bin
-
-        set_pamconfig() {
-          # This hack is needed to work around the fact that there are 101 places
-          # libraries live on Linux, unguessable, and not even symlinked from some
-          # traditional location like /lib or /usr/lib.
-          ldd_line=`ldd \`installed_binary Xvnc\` 2>/dev/null | grep '/libc\.' | head -n 1`
-          libsecurity=`dirname \`echo "$ldd_line" | $awk '{ if ($2 == "=>") print $3}'\` 2>/dev/null`/security
-          if [ -f $libsecurity/pam_selinux.so ]; then pamconfig="$pamconfig
-session required pam_selinux.so"; fi
-          if [ -f $libsecurity/pam_umask.so ]; then pamconfig="$pamconfig
-session optional pam_umask.so"; fi
-          if [ -f $libsecurity/pam_limits.so ]; then pamconfig="$pamconfig
-session optional pam_limits.so"; fi
-          pamconfig="$pamconfig
-session required pam_unix.so"
-          if [ -f $libsecurity/pam_systemd.so ]; then pamconfig="$pamconfig
-session optional pam_systemd.so"; fi
-          if [ -f $libsecurity/pam_env.so ]; then pamconfig="$pamconfig
-session optional pam_env.so"; fi
-        }
-
-        # We make sure we find systemctl, chkconfig, and update-rc.d:
-        PATH=$PATH:/sbin:/usr/sbin
-        ;;
-    SunOS)
-        sun_cups_dir=/opt/sfw/cups/lib/cups
-        username=\$LOGNAME
-        # We modify the path in order to make sure we find xset and svcadm:
-        PATH=$PATH:/usr/openwin/bin:/usr/sbin
-        awk=nawk
-        which() { ksh whence -p "$@"; }
-        which_str="ksh whence -p"
-
-        set_pamconfig() {
-          if [ -f /usr/lib/security/pam_unix.so.1 ]; then
-              # Solaris 5.8, 5.9
-              pamconfig="auth required pam_unix.so.1
-account required pam_unix.so.1
-session required pam_unix.so.1"
-          elif [ -f /usr/lib/security/pam_unix_auth.so.1 ] &&\
-               [ -f /usr/lib/security/pam_authtok_get.so.1 ] &&\
-               [ -f /usr/lib/security/pam_unix_cred.so.1 ] &&\
-               [ -f /usr/lib/security/pam_unix_session.so.1 ]; then
-              # Solaris 5.10, 5.11
-              pamconfig="auth required pam_authtok_get.so.1
-auth required pam_unix_auth.so.1
-auth required pam_unix_cred.so.1"
-              if [ -f /usr/lib/security/pam_unix_acct.so.1 ]; then
-                  # Solaris 5.11
-                  pamconfig="$pamconfig
-account required pam_unix_acct.so.1"
-              elif [ -f /usr/lib/security/pam_unix_account.so.1 ]; then
-                  # Solaris 5.10
-                  pamconfig="$pamconfig
-account required pam_unix_account.so.1"
-              fi
-              pamconfig="$pamconfig
-session required pam_unix_session.so.1"
-          else
-              echo "Can't find required PAM modules"
-              exit 1
-          fi
-        }
-        ;;
-    HP-UX)
-        username=\$LOGNAME
-        # We modify the path in order to make sure we find xset:
-        PATH=$PATH:/usr/bin/X11
-        which() { command -v "$@"; }
-        which_str="command -v"
-        set_pamconfig() {
-          pamconfig="auth required libpam_unix.1
-account required libpam_unix.1
-session required libpam_unix.1";
-        }
-        ;;
-    AIX)
-        if [ "$init_pam" = "1" ]; then
-            echo "Automatic PAM configuration not supported on this platform"
-            init_pam=0
-        fi
-        ;;
-    FreeBSD)
-        etcvnc=/usr/local/etc/vnc
-        libvnc=/usr/local/libexec/vnc
-        sharevnc=/usr/local/share/vnc
-        cups_backend_dir=/usr/local/libexec/cups/backend
-        set_pamconfig() {
-          pamconfig="$pamconfig
-session required pam_unix.so";
-        }
-        ;;
-    *)
-        echo "Unknown platform"
-        exit 1
-        ;;
-esac
-
-
+link_cups_lib64=1
+libvnc=$1/usr/lib/vnc
+bin=$1/usr/bin
 
 # Configuration steps to be performed only at install time
 if [ "$init_install" = "1" ]; then
